/*
 */
var $jscomp={scope:{},findInternal:function(b,e,c){b instanceof String&&(b=String(b));for(var d=b.length,a=0;a<d;a++){var h=b[a];if(e.call(c,h,a,b))return{i:a,v:h}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,e,c){if(c.get||c.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[e]=c.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,e,c,d){if(e){c=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var a=b[d];a in c||(c[a]={});c=c[a]}b=b[b.length-1];d=c[b];e=e(d);e!=d&&null!=e&&$jscomp.defineProperty(c,b,{configurable:!0,writable:!0,value:e})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,c){return $jscomp.findInternal(this,b,c).v}},"es6-impl","es3");
(function(b,e){b.module("leoApi",["ugCommon"]).service("$leo",["$http","$common",function(c,d){var a={$config:{},$constant:{jsonp:"jsonp=JSON_CALLBACK",uri:{core:{apps:"api/apps",navs:"api/navs"}}},config:function(b,c,g,d){a.$config.host=b;a.$config.accessToken=c;a.$config.appId=g;a.$config.scope=d},apps:function(c){a.$jsonp([a.$config.host,a.$constant.uri.core.apps,a.$config.accessToken,a.$config.appId].join("/"),function(a){(c||b.noop)(a)})},navs:function(c,d){a.$jsonp([a.$config.host,a.$constant.uri.core.navs,
"99",c.id,a.$config.accessToken,a.$config.appId].join("/"),function(a){(d||b.noop)(a)})},refresh:function(b){d.valid.str(b)?a.$config.scope.bodyUrl=b+(0<=b.indexOf("?")?"&":"?")+d.date.timestamp():d.valid.obj(a.$config.scope.$subnav)?a.$config.scope.bodyUrl=a.$config.scope.$subnav.url+(0<=a.$config.scope.$subnav.url.indexOf("?")?"&":"?")+d.date.timestamp():console.error("wrong url or nav setting")},fullscreen:function(b){a.$config.scope.$fullscreen=d.valid.defined(b)?b:!0!==a.$config.scope.$fullscreen;
a.$config.scope.$fullscreen?d.$("body").addClass("fullscreen"):d.$("body").removeClass("fullscreen")},$jsonp:function(a,d,g){c({method:"jsonp",url:a}).then(function(a){(d||b.noop)(a.data)},function(a){console.error(a);(g||b.noop)(a.data)})}};return a}]).directive("layout",["$leo","$common",function(c,d){return{restrict:"E",replace:!0,transclude:!0,scope:!0,templateUrl:d.ctrl.scriptPath(["leo-api.min.js","leo-api.js"])+"/layout.html",link:function(a,e,f){b.extend(a,{$init:function(){b.extend(a,{$host:f.host,
$accessToken:f.accessToken,$appId:f.appId,$brand:f.brand,$username:f.username,$mode:parseInt(f.mode||0)});c.config(a.$host,a.$accessToken,a.$appId,a);a.$dom();a.$find({id:"root",root:!0});c.apps(function(b){a.$apps=b})},$dom:function(){a.$transcludeDom=e.find("[ng-transclude]");a.$brandDom=a.$transcludeDom.find(".navbar-brand");a.$llisDom=a.$transcludeDom.find("li.layout-nav-left");a.$rlisDom=a.$transcludeDom.find("li.layout-nav-right");0<a.$brandDom.length&&(e.find(".navbar-header > .navbar-brand").remove(),
e.find(".navbar-header").append(a.$brandDom));0<a.$llisDom.length&&e.find(".navbar-nav").not(".navbar-right").append(a.$llisDom);0<a.$rlisDom.length&&e.find(".navbar-right").prepend(a.$rlisDom)},$find:function(b){a.$modes[a.$mode].$find(b)},$active:function(b){a.$subnav=b;c.refresh()},$modes:{0:{$find:function(b){d.valid.arr(b.children)&&!0===b.$loaded?(a.$nav=b,a.$active(a.$nav.children[0])):c.navs(b,function(c){d.valid.arr(c)?!0===b.root?(a.$navs=c,a.$modes[0].$find(a.$navs[0])):(a.$nav=b,a.$nav.$loaded=
!0,a.$nav.children=c,a.$active(a.$nav.children[0])):console.error(c)})}},1:{$find:function(e,f){d.valid.arr(e.children)&&!0===e.$loaded||c.navs(e,function(c){d.valid.arr(c)?!0===e.root?(a.$navs=c,b.forEach(a.$navs,function(b,c){a.$modes[1].$find(b,0===c)})):(e.children=c,e.$loaded=!0,f&&a.$active(e.children[0])):console.error(c)})}}}}).$init()}}}])})(window.angular);
